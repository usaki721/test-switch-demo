{"version":3,"sources":["components/MovieList.js","components/MovieDetails.js","App.js","index.js"],"names":["MovieList","props","handleSwitch","useState","movies","setMovies","genreList","setGenreList","genre","setGenre","useEffect","axios","get","then","res","list","Set","data","i","Genre","split","g","add","trim","Array","from","sort","catch","err","console","log","ButtonGroup","next","previous","carouselState","currentSlide","slidesToShow","totalItems","className","onClick","disabled","aria-label","htmlFor","id","onChange","e","target","value","key","map","responsive","desktop","breakpoint","max","min","items","tablet","mobile","arrows","renderButtonGroupOutside","customButtonGroup","filter","includes","index","Id","title","Title","tabIndex","style","backgroundImage","Poster","onKeyDown","MovieDetails","movie","mobileMeta","ignoreMeta","src","alt","Object","keys","href","rel","App","currentMovie","setCurrentMovie","ReactDOM","render","document","getElementById"],"mappings":"uTAuHeA,G,MA7GG,SAACC,GAAW,IACnBC,EAAgBD,EAAhBC,aADkB,EAEGC,mBAAS,IAFZ,mBAElBC,EAFkB,KAEVC,EAFU,OAGSF,mBAAS,IAHlB,mBAGlBG,EAHkB,KAGPC,EAHO,OAICJ,mBAAS,IAJV,mBAIlBK,EAJkB,KAIXC,EAJW,KAKzBC,qBAAU,WAGNC,IAAMC,IAAI,oDACLC,MAAK,SAACC,GAEH,IAFW,EAEPC,EAAO,IAAIC,IAFJ,cAGGF,EAAIG,MAHP,IAGX,2BAAwB,CAAC,IAAD,EAAfC,EAAe,sBACNA,EAAEC,MAAMC,MAAM,MADR,IACpB,2BAAkC,CAAC,IAA1BC,EAAyB,QAC9BN,EAAKO,IAAID,EAAEE,SAFK,gCAHb,8BAQXlB,EAAUS,EAAIG,MACdV,EAAaiB,MAAMC,KAAKV,GAAMW,QAC9BxB,EAAaY,EAAIG,KAAK,OAEzBU,OAAM,SAACC,GACJC,QAAQC,IAAIF,QAErB,IAGH,IAgBMG,EAAc,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAwB,qCACzCC,cAAiBC,EADwB,EACxBA,aAAaC,EADW,EACXA,aAAcC,EADH,EACGA,WACpD,OACI,oCACKA,GAAcD,EAAe,KAC1B,yBAAKE,UAAU,yBACX,4BACIA,UAAU,sEACVC,QAAS,kBAAMN,KACfO,SAA2B,IAAjBL,EACVM,aAAW,eAEf,4BACIH,UAAU,uEACVC,QAAS,kBAAMP,KACfQ,SAAUL,IAAiBE,EAC3BI,aAAW,kBAQnC,OACI,6BAASH,UAAU,wBAGf,yBAAKA,UAAU,cACX,2BAAOI,QAAQ,SAASlC,GAAS,SACjC,4BAAQmC,GAAG,QAAQC,SAAU,SAACC,GAAQpC,EAASoC,EAAEC,OAAOC,SACpD,4BAAQC,IAAK,MAAOD,MAAM,IAA1B,aACCzC,EAAU2C,KAAI,SAAA/B,GAAC,OAAK,4BAAQ8B,IAAK9B,GAAIA,QAK9C,yBAAKoB,UAAU,gBACX,kBAAC,IAAD,CACIY,WAvDG,CACfC,QAAS,CACLC,WAAY,CAAEC,IAAK,IAAMC,IAAK,KAC9BC,MAAO,GAEXC,OAAQ,CACJJ,WAAY,CAAEC,IAAK,IAAKC,IAAK,KAC7BC,MAAO,GAEXE,OAAQ,CACJL,WAAY,CAAEC,IAAK,IAAKC,IAAK,GAC7BC,MAAO,IA8CCG,QAAQ,EACRC,0BAA0B,EAC1BC,kBAAmB,kBAAC7B,EAAD,OAElB3B,EAAOyD,QAAO,SAAA3C,GAAC,uBAAIA,EAAEC,aAAN,aAAI,EAAS2C,SAAStD,MAAQyC,KAAI,SAAC/B,EAAG6C,GAAJ,OAC9C,yBACIf,IAAK9B,EAAE8C,GACP1B,UAAU,kBAEV,yBACIA,UAAU,aACV2B,MAAO/C,EAAEgD,MACTC,SAAS,IACTC,MAAO,CAAEC,gBAAgB,OAAD,OAASnD,EAAEoD,OAAX,MACxB/B,QAAS,WAAQtC,EAAMC,aAAagB,IACpCqD,UAAW,SAAC1B,GAAkB,UAAVA,EAAEG,KAAmB9C,EAAagB,eCnDvEsD,EApDM,SAACvE,GAAW,IACrBwE,EAAUxE,EAAVwE,MACFC,EAAW,CAAC,OAAO,QAAQ,QAC3BC,EAAa,CAAC,SAAU,QAAS,KAAM,QAC7C,OACI,6BAASrC,UAAU,2BAEf,yBAAKA,UAAU,QACX,yBAAKsC,IAAKH,EAAMH,OAAQO,IAAI,YAGhC,yBAAKvC,UAAU,SAGX,4BAAKmC,EAAMP,OACX,wBAAI5B,UAAU,qBACTwC,OAAOC,KAAKN,GACRZ,QAAO,SAAA3C,GAAC,OAAKwD,EAAWZ,SAAS5C,IAAmB,QAAbuD,EAAMvD,MAC7C+B,KAAI,SAAA/B,GAAC,OACF,wBAAI8B,IAAK9B,GACL,0BAAMoB,UAAU,SAASpB,EAAzB,MACA,8BAAOuD,EAAMvD,SAM7B,yBAAKoB,UAAU,UAGX,yBAAKA,UAAU,SAASsC,IAAKH,EAAMH,OAAQO,IAAI,WAG/C,wBAAIvC,UAAU,SACTwC,OAAOC,KAAKN,GACRZ,QAAO,SAAA3C,GAAC,OAAMyD,EAAWb,SAAS5C,IAAmB,QAAbuD,EAAMvD,MAC9C+B,KAAI,SAAA/B,GAAC,OACF,wBAAI8B,IAAK9B,EAAGoB,UAAWoC,EAAWZ,SAAS5C,GAAI,UAAU,IACrD,0BAAMoB,UAAU,SAASpB,EAAzB,MACK,YAAJA,EACG,uBAAG8D,KAAMP,EAAMvD,GAAI4B,OAAO,SAASmC,IAAI,uBAAuBR,EAAMvD,IAEpE,8BAAOuD,EAAMvD,aC9BtCgE,MAbf,WAAgB,IAAD,EAC2B/E,mBAAS,IADpC,mBACNgF,EADM,KACQC,EADR,KAGb,OACE,yBAAK9C,UAAU,OACb,8BACE,kBAAC,EAAD,CAAcmC,MAAOU,IACrB,kBAAC,EAAD,CAAWjF,aAAckF,OCPjCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.8cd1e825.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\n\n/**\n * Movie carousel with genre filter\n * @props\n * handleSwitch: (movie:Object)=>void switch selected movie\n */\nconst MovieList = (props) => {\n    const {handleSwitch} = props;\n    const [movies, setMovies] = useState([]);\n    const [genreList, setGenreList] = useState([]);\n    const [genre, setGenre] = useState(''); // current genre\n    useEffect(() => {\n\n        // get movie data from api\n        axios.get('https://www.mocky.io/v2/5af935ab320000221d86afe6')\n            .then((res) => {\n                // get all genres\n                let list = new Set();\n                for (let i of res.data) {\n                    for (let g of i.Genre.split(',')) {\n                        list.add(g.trim());\n                    }\n                }\n                setMovies(res.data);\n                setGenreList(Array.from(list).sort());\n                handleSwitch(res.data[0]); // select the first movie by default\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, []);\n\n    // Carousel responsive config\n    const responsive = {\n        desktop: {\n            breakpoint: { max: 4000, min: 992 },\n            items: 6\n        },\n        tablet: {\n            breakpoint: { max: 992, min: 464 },\n            items: 4\n        },\n        mobile: {\n            breakpoint: { max: 576, min: 0 },\n            items: 2\n        }\n    };\n\n    // customize carousel button\n    const ButtonGroup = ({ next, previous, ...rest }) => {\n        const { carouselState: { currentSlide,slidesToShow, totalItems } } = rest;\n        return (\n            <>\n                {totalItems <= slidesToShow ? null :\n                    <div className=\"carousel-button-group\">\n                        <button \n                            className='react-multiple-carousel__arrow react-multiple-carousel__arrow--left' \n                            onClick={() => previous()} \n                            disabled={currentSlide === 0}\n                            aria-label='prev slide'\n                        />\n                        <button \n                            className='react-multiple-carousel__arrow react-multiple-carousel__arrow--right' \n                            onClick={() => next()} \n                            disabled={currentSlide === totalItems}\n                            aria-label='prev slide'\n                        />\n                    </div>\n                }\n            </>\n        );\n    }\n\n    return (\n        <section className='container movie-list'>\n\n            {/* Customized select */}\n            <div className='select-box'>\n                <label htmlFor='genre'>{genre || 'Genre'}</label>\n                <select id='genre' onChange={(e) => { setGenre(e.target.value) }}>\n                    <option key={'All'} value=''>All Genre</option>\n                    {genreList.map(i => (<option key={i}>{i}</option>))}\n                </select>\n            </div>\n\n            {/* Carousel */}\n            <div className='carousel-box'>\n                <Carousel\n                    responsive={responsive}\n                    // infinite={true}\n                    arrows={false}\n                    renderButtonGroupOutside={true}\n                    customButtonGroup={<ButtonGroup />}\n                >\n                    {movies.filter(i => i.Genre?.includes(genre)).map((i, index) => (\n                        <div\n                            key={i.Id}\n                            className='movie-item-box'\n                        >\n                            <div\n                                className='movie-item'\n                                title={i.Title}\n                                tabIndex='0'\n                                style={{ backgroundImage: `url(${i.Poster})` }}\n                                onClick={() => { props.handleSwitch(i) }}\n                                onKeyDown={(e) => { e.key === 'Enter' && handleSwitch(i) }}\n                            />\n                        </div>\n                    ))}\n                </Carousel>\n            </div>\n        </section>\n    )\n}\n\nexport default MovieList;","import React from 'react';\n\n/**\n * Detail information of selected movie\n * @param {movie: Object} props \n */\nconst MovieDetails = (props) => {\n    const { movie } = props;\n    const mobileMeta=['Year','Genre','Plot']; // header metas displayed after title in mobile layout\n    const ignoreMeta = ['Poster', 'Title', 'Id', 'Type']; // metas not display\n    return (\n        <section className='container movie-details'>\n            {/* PC Poster */}\n            <div className='left'>\n                <img src={movie.Poster} alt='poster' />\n            </div>\n            \n            <div className='right'>\n\n                {/* Title and header metas */}\n                <h2>{movie.Title}</h2>\n                <ul className='metas meta-mobile'>\n                    {Object.keys(movie)\n                        .filter(i => (mobileMeta.includes(i) && movie[i] !== 'N/A'))\n                        .map(i => (\n                            <li key={i}>\n                                <span className='label'>{i}: </span>\n                                <span>{movie[i]}</span>\n                            </li>\n                        ))\n                    }\n                </ul>\n\n                <div className='detail'>\n\n                    {/* Mobile poster */}\n                    <img className='poster' src={movie.Poster} alt='poster' />\n\n                    {/* Metas */}\n                    <ul className='metas'>\n                        {Object.keys(movie)\n                            .filter(i => (!ignoreMeta.includes(i) && movie[i] !== 'N/A'))\n                            .map(i => (\n                                <li key={i} className={mobileMeta.includes(i)? 'meta-pc':''}>\n                                    <span className='label'>{i}: </span>\n                                    {i==='Website'?(\n                                        <a href={movie[i]} target='_blank' rel=\"noopener noreferrer\">{movie[i]}</a>\n                                    ):(\n                                        <span>{movie[i]}</span>\n                                    )}\n                                </li>\n                            ))}\n                    </ul>\n                </div>\n            </div>\n        </section>\n    )\n}\nexport default MovieDetails;","import React, { useState } from 'react';\nimport './App.scss';\nimport MovieList from './components/MovieList';\nimport MovieDetails from './components/MovieDetails';\n\nfunction App() {\n  const [currentMovie, setCurrentMovie] = useState({});\n\n  return (\n    <div className=\"App\">\n      <main>\n        <MovieDetails movie={currentMovie} />\n        <MovieList handleSwitch={setCurrentMovie} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}